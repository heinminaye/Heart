# on:
#   push:
#     branches:
#       - master

# jobs:
#   build-js-production:
#     name: Build JavaScript/CSS for Production Server
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'
#     steps:
#       - uses: actions/checkout@v1
#       - name: NPM Build
#         run: |
#           npm install
#           npm run prod
#       - name: Put built assets in Artifacts
#         uses: actions/upload-artifact@v1
#         with:
#           name: assets
#           path: public
#           retention-days: 3
#   deploy-production:
#     name: Deploy Project to Production Server
#     runs-on: ubuntu-latest
#     needs: [build-js-production]
#     if: github.ref == 'refs/heads/master'
#     steps:
#       - uses: actions/checkout@v1
#       - name: Fetch built assets from Artifacts
#         uses: actions/download-artifact@v1
#         with:
#           name: assets
#           path: public
#       - name: Setup PHP
#         uses: shivammathur/setup-php@master
#         with:
#           php-version: "8.0"
#           extension-csv: mbstring, bcmath
#       - name: Composer install
#         run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#       - name: Setup Deployer
#         uses: atymic/deployer-php-action@master
#         with:
#           ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#           ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

#       - name: Deploy to Production
#         env:
#           DOT_ENV: ${{ secrets.DOT_ENV_PRODUCTION }}
#         run: php vendor/deployer/deployer/deployer.phar deploy prod --branch="master" -vv

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

laravel-tests:
  runs-on: ubuntu-latest

  steps:
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
build:
  runs-on: ubuntu-latest

  steps:
    - name: Checkout

      uses: actions/checkout@v2

    - name: Setup Node.js

      uses: actions/setup-node@v2-beta

      with:
        node-version: "12"

        check-latest: true

    - name: Install NPM dependencies

      run: npm install

    - name: Compile assets for production

      run: npm run production

deploy:
  runs-on: ubuntu-latest

  steps:
    - name: Checkout

      uses: actions/checkout@v2

    - name: Deployment

      uses: appleboy/ssh-action@main

      with:
        host: ${{ secrets.SSH_HOST }}

        key: ${{ secrets.SSH_PRIVATE_KEY }}

        username: ${{ secrets.SSH_USERNAME }}

        script: |

          cd /var/www/html/

          git checkout -f 

          git pull
